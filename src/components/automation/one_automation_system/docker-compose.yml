version: "3.8"

services:
  one-automation:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: one-automation-system
    restart: unless-stopped
    environment:
      - HEADLESS=true
      - TZ=Asia/Ho_Chi_Minh
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - .env
    volumes:
      - automation-data:/app/data
      - automation-logs:/app/logs
      - automation-reports:/app/reports
      - automation-config:/app/config
      - automation-backups:/app/backups
    networks:
      - automation-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import os; exit(0 if os.path.exists('/app/logs/automation.log') else 1)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"
    # For production scheduling
    command: python automation.py --schedule

  # Web interface service
  web-interface:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: one-automation-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - automation-data:/app/data
      - automation-logs:/app/logs
      - automation-reports:/app/reports
    networks:
      - automation-network
    depends_on:
      - one-automation
    command: python web_interface.py

  # Monitoring service with Nginx
  monitoring:
    image: nginx:alpine
    container_name: one-automation-monitor
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - automation-reports:/usr/share/nginx/html/reports:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - automation-network
    depends_on:
      - one-automation
      - web-interface
    healthcheck:
      test:
        ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: one-automation-redis
    restart: unless-stopped
    networks:
      - automation-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

networks:
  automation-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  automation-data:
    driver: local
  automation-logs:
    driver: local
  automation-reports:
    driver: local
  automation-config:
    driver: local
  automation-backups:
    driver: local
  redis-data:
    driver: local
